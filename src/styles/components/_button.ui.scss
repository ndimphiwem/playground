// @COMPONENT

/** Button Sizes **/
$button-sizes: (
  sm: 7px 12px,
  md: 14px 14px,
  lg:  14px 24px,
  xtra: 16px 30px
) !default;

 /** Button Block  **/
.c-btn {
 @extend %button;

  @mixin make-outline(
    $color, 
    $active-background: $color, 
    $active-border: $color
  ) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;

  &:hover {
    color: $white-color;
    background-color: $active-background;
    border-color: $active-border;
  }
 }

  /** Button Elements  **/
  &__default {
    background-color: $body-color;
    @include hover {
      border-color: $body-color;
      background-color: $white-color;
      color: $body-color;
    }
  }

  &__primary {
    background-color: $primary-color;
    @include hover {
      border-color: $primary-color;
      background-color: $white-color;
      color: $primary-color;
    }
  }

  &__secondary {
    background-color: $secondary-color;
    @include hover {
      border-color: $secondary-color;
      background-color: $white-color;
      color: $secondary-color;
    }

    &--outline {
      @include make-outline(
       $secondary-color, 
       $active-background: $secondary-color, 
       $active-border: $secondary-color
      );
    }
  }

  &__success {
    background-color: $success-color;
    @include hover {
      border-color: $success-color;
      background-color: $white-color;
      color: $success-color;
    }
  }

  &__warning {
    background-color: $warning-color;
    @include hover {
      border-color: $warning-color;
      background-color: $white-color;
      color: $warning-color;
    }
  }

  &__danger {
    background-color: $danger-color;
    @include hover {
      border-color: $danger-color;
      background-color: $white-color;
      color: $danger-color;
    }
  }

  // Have a look at this
  &__link {
    text-decoration: none;
    border: 0;
    background: none;

    &:hover {
        background: none;
        color: $body-color;
        border: 0;
        text-decoration: underline;
    }

    &:focus {
        color: $white-color;
    }
  }

  &__input {
    top: -30px;
    float: right;
    padding: 3px 16px;
    margin-right: 0.2em;

    &--absolute {
      position: absolute;
      right: 3px;
      top: 3px;
      height: 27px;
      padding: 0px 5px;
    }
  }

  // Look at how to better implement this
  &__skewed {
    position: relative;
    background-color: transparent;
    padding: 7px 20px;
    text-align: center;
    color: $white-color;
    margin-left: 30px;
    cursor: pointer;
    z-index: 2;

    &:before, &:after {
      z-index: -1;
      content: "";
      position: absolute;
      background-color: $primary-color;
      border: 2px solid $primary-color;
      display: block;
      transition: .2s ease-out;
      transition-property: background-color, color;
    }

    &:before {
      border-width: 2px 0 2px 2px;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      -webkit-transform: skew(15deg);
      -ms-transform: skew(15deg);
      transform: skew(15deg);
    }

    &:after {
      border-width: 2px 2px 2px 0;
      top: 0;
      bottom: 0;
      right: -9px;
      width: 20px;
    }

    &:hover {
      color: $primary-color;
      &:after {
        background-color: $white-color;
      }
    
      &:before {
        background-color: $white-color;
      }
    }
  }

  /** Button Modifiers  **/
  &--full {
    display: block;
    clear: both;
    width: 100%;
  }

  &--no-padding {
    padding: 0;
  }

  &--opposite {
    // margin: 1rem 0 0 0;
    
    &:before {
      border-width: 2px 0 2px 2px;
      top: 0;
      bottom: 0;
      left: -9px;
      width: 20px;
      -webkit-transform: none;
      -ms-transform: none;
      transform: none;
    }

    &:after {
      border-width: 2px 2px 2px 0;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      width: auto;
      -webkit-transform: skew(-15deg);
      -ms-transform: skew(-15deg);
      transform: skew(-15deg);
    }
  }

  // Make a sizes map for this
  &--sm {
    padding: map-get($button-sizes, sm);
    font-size: text-scale('sm');
  }

  &--md {
    padding: map-get($button-sizes, md);
    font-size: text-scale('md');
  }

  &--lg {
    padding: map-get($button-sizes, lg);
    font-size: text-scale('lg');

    @include --breakpoint(tablet) {
      padding: map-get($button-sizes, xtra);
      font-size: text-scale('xl');
    }
  }

  &--squared {
    border-radius: 0px;
  }

  &--expanded {
    display: block;
    width: 100%;
  }

  &--clear {
    border: 0;
    background: none;
    border-radius: 0;
    cursor: pointer;
    padding: 7px 7px 0 0;
  }
}
